---
- name: "Ensure certs group exists"
  group: 
    name: certs
    state: present

- name: "Ensure restic-server user"
  user:
    name: rest-server
    shell: /bin/bash
    password: '!'
    update_password: on_create
    groups: certs
    state: present

- name: "Ensure restic-server binary"
  copy: 
    src: ../files/rest-server-0.9.7-linux-amd64
    dest: /usr/local/bin/rest-server
    owner: rest-server
    mode: '0700'

- name: "Ensure restic-server backup root directory"
  file:
    path: "{{ rest_backup_storage_dir }}"
    state: directory
    owner: rest-server
    mode: '0700'


- name: "ensure python lib for htpasswd actions"
  apt:
    name: 
      - python3-passlib
      - python3-bcrypt
    state: present

# for certbot standalone mode
- name: "ensure no Webserver installed"
  apt:
    name: 
      - nginx
      - apache2
    state: absent
    
- import_tasks: letsencrypt.yml

- name: "Ensure /etc/rest-server"
  file:
    path: "/etc/rest-server"
    state: directory
    owner: rest-server
    mode: '0700'

- name: "Ensure read on certpaths for certificates"
  file:
    path: /etc/letsencrypt
    group: certs
    mode: g+rx 
    recurse: yes

- name: "Ensure restic-server systemd unit"
  template:
    src: rest-server.service
    dest: /etc/systemd/system/rest-server.service

- name: "enable rest-server systemd"
  systemd:
    name: rest-server.service
    state: started
    enabled: yes

- name: "Ensure Backup User can connect"
  htpasswd:
    path: "{{ rest_backup_storage_dir }}/.htpasswd"
    name: "{{ item.name }}"
    password: "{{ item.conn_pw }}"
    owner: rest-server
    mode: "0600"
    crypt_scheme: bcrypt
  with_items: "{{ rest_backup_tasks }}"


- name: adapt rest-server ports in ufw
  copy:
    content: |
      [rest-server]
      title=Restic REST Server
      description=REST Server for restic backup
      ports=8000/tcp
    mode: 0644
    dest: /etc/ufw/applications.d/rest-server

- name: allow rest-server in ufw
  ufw:
    rule: allow
    name: rest-server
    state: enabled